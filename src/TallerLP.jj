PARSER_BEGIN(TallerLP)import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.util.StringTokenizer;
public class TallerLP{	public static void ReadFile(String nameFile) throws IOException {	  	String fullLine = " ";		FileReader fr = new FileReader(nameFile);		BufferedReader bf = new BufferedReader(fr);		String line = bf.readLine();		String palabra[] = line.split(",");		for(int i = 0 ; i <= 2; i++) { 					System.out.println(palabra [i]);		}		while(line != null) {			fullLine += line;			line = bf.readLine();			System.out.println(line);			if (line == null) { break; }			palabra = line.split(",");			for(int i = 0 ; i <= 2; i++) { 							System.out.println(palabra [i]);			}		  }	  }    public static void main(String args []) throws IOException  {    String LineaEntera = " ";    FileReader f = new FileReader("Registros.txt"); 		BufferedReader bf = new BufferedReader(f);	    String Linea = bf.readLine();		     	while(Linea != null) {		           LineaEntera += Linea;	           Linea = bf.readLine();	           //System.out.println(Linea);		        }	        	 		 	 f.close();					try{			 				new TallerLP(new java.io.StringReader(LineaEntera)).S();				System.out.println("La sintaxis es CORRECTA");					}catch(Throwable e){				System.out.println("Hay un ERROR en la sintaxis: "+ e.getMessage());			}		ReadFile("Conversiones.txt");     	}}PARSER_END(TallerLP)/* Reglas Lexicas */SKIP:  { " " | "\t" | "\n" | "\r"  }TOKEN: {	<MONEDAVIRTUAL: ("bitcoin" | "peercoin" | "ripple" | "litecoin" | "litecoin" | "dogecoin") > | 	<MONEDA: ("dolar" | "pesos")> |	<NUMBER: (["0" - "9"])+ > |	<DIA: ("Dia1" | "Dia2" | "Dia3" | "Dia4" | "Dia5" | "Dia6" | "Dia7")>}/* Reglas Sint√°cticas*/void S(): {} { Peso() (S())* < EOF > }void Peso(): {} { Peso1() | Peso2() | Peso3() | Peso4() | Peso5() | Peso6() } void Peso1(): {} { "alt{"MONEDAVIRTUAL()"}""{"NUMBER()"}""{"DIA()"}"  }void Peso2(): { } { "alt["MONEDAVIRTUAL()"]""["NUMBER()"]""["DIA()"]"  }void Peso3(): { } { "alt("MONEDAVIRTUAL()")""("NUMBER()")""("DIA()")"  }void Peso4(): { } {"{"MONEDA()"}""{"NUMBER()"}""{"DIA()"}" }void Peso5(): { } {"["MONEDA()"]""["NUMBER()"]""["DIA()"]"  }void Peso6(): { } {"("MONEDA()")""("NUMBER()")""("DIA()")"  }void MONEDAVIRTUAL(): {} {<MONEDAVIRTUAL>}void MONEDA(): {} {<MONEDA>}void NUMBER(): {} {<NUMBER>}void DIA(): {} {<DIA>}